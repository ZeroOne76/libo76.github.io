import{_ as n,X as s,Y as a,a3 as p}from"./framework-4966486c.js";const t={},e=p(`<p>事务的隔离级别这一章就是实现MVCC中比较重要的一节，Entry中保存了XMIN与XMAX，XMIN是在版本创建时填写的，而XMAX是在版本被删除或修改时候填写的 在读提交下，版本对事务的可见性逻辑如下</p><blockquote><p>这里可以看高性能MySQL第三版，这里大致是基于这本书写的</p></blockquote><h2 id="事务隔离级别" tabindex="-1"><a class="header-anchor" href="#事务隔离级别" aria-hidden="true">#</a> 事务隔离级别</h2><h3 id="读已提交" tabindex="-1"><a class="header-anchor" href="#读已提交" aria-hidden="true">#</a> 读已提交</h3><p>就是当一个事务提交了一个数据后，其它事务都可以读取到对应的数据 所以存在下面几种情况</p><ol><li>xmin 未提交 a. xid == xmin &amp;&amp; xmax ==0 这代表这条记录就是当前事务创建的并且没有被当前事务删除 可以访问 b. 其它情况不能访问,因为xmin没有提交都不能访问</li><li>xmin 已经提交 a. xmax == 0 可以访问，因为这表示这个记录所对应的事务已经提交了并且没有被删除 b. xamx ！= 0(说明有事务在删除该数据) ⅰ. xid == xmax 说明是当前事务在删除该数据 不能访问 ⅱ. xid ！= xmax 说明不是当前事务在删除该数据 <ol><li>xmax 没有被提交 说明其它事务是正在删除或者取消了删除，那么可以访问</li><li>xmax 被提交 说明被删除了 不能访问</li></ol></li></ol><blockquote><p>说明一下xmin未提交为啥不需要判断isCommitted，而是直接是xid == xmin，因为当xid没有被提交时候，只有一种情况可以被访问，那就是当前这条记录本身就是该事务所创建并且没有被当前事务删除</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">readCommitted</span><span class="token punctuation">(</span><span class="token class-name">TransactionManager</span> tm<span class="token punctuation">,</span> <span class="token class-name">Transaction</span> t<span class="token punctuation">,</span> <span class="token class-name">Entry</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> xid <span class="token operator">=</span> t<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
        <span class="token keyword">long</span> xmin <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getXmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> xmax <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getXmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xmin <span class="token operator">==</span> xid <span class="token operator">&amp;&amp;</span> xmax <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>tm<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span>xmin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>xmax <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>xmax <span class="token operator">!=</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>tm<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span>xmax<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可重复读" tabindex="-1"><a class="header-anchor" href="#可重复读" aria-hidden="true">#</a> 可重复读</h3><p>可重复读比读已提交复杂了许多 下面是对应的情况</p><ol><li>xmin 未提交 a. xmid == xid &amp;&amp; xmax ==0 与上面类似 可以访问 b. 其它情况不能访问</li><li>xmin 已经提交，因为我们是根据文件判断该事务的状态，所以还需要根快照来决定是否可看 xmin提交、xmin &lt; xid （当前事务所能访问的数据只能是在该事务开启之前存的）、!t.isInSnapshot(xmin)（当前事务开启的时候xmin不能处于活跃状态）这三个条件是必须满足的，如果这三个条件满足那么就是当前当前记录是在当前事务开启之前就已经提交了的 a. xmin == 0 代表没有被删 所以可以访问 b. xmax ！=0 (说明有事务正在删除该数据) ⅰ. xid == xmax 不能被访问说明是当前事务删除了该数据 ⅱ. xid ！= xmax <ol><li>xmax未提交 可以访问</li><li>xmax 已经提交 a. xid &lt; xmax 说明这条数据是在xid之后被删除的所以可以访问 b. xid &gt; xmax ⅰ. t.isInSnapshot(xmax) 说明在xid开启的时候，xmax还没有提交可以访问 ⅱ. ！t.isInSnapshot(xmax) 不能访问</li></ol></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">repeatableRead</span><span class="token punctuation">(</span><span class="token class-name">TransactionManager</span> tm<span class="token punctuation">,</span> <span class="token class-name">Transaction</span> t<span class="token punctuation">,</span> <span class="token class-name">Entry</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> xid <span class="token operator">=</span> t<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
        <span class="token keyword">long</span> xmin <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getXmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> xmax <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getXmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xmin <span class="token operator">==</span> xid <span class="token operator">&amp;&amp;</span> xmax <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>tm<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span>xmin<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> xmin <span class="token operator">&lt;</span> xid <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">isInSnapshot</span><span class="token punctuation">(</span>xmin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>xmax <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>xmax <span class="token operator">!=</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>tm<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span>xmax<span class="token punctuation">)</span> <span class="token operator">||</span> xmax <span class="token operator">&gt;</span> xid <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">isInSnapshot</span><span class="token punctuation">(</span>xmax<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本跳跃问题" tabindex="-1"><a class="header-anchor" href="#版本跳跃问题" aria-hidden="true">#</a> 版本跳跃问题</h3><p>对于读已提交来说是允许的，而对于可重复读来说是不行的 但是也挺简单的只需要判断当前数据最新的创建者对当前事务是否可见即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isVersionSkip</span><span class="token punctuation">(</span><span class="token class-name">TransactionManager</span> tm<span class="token punctuation">,</span> <span class="token class-name">Transaction</span> t<span class="token punctuation">,</span> <span class="token class-name">Entry</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> xmax <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getXmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>level <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> tm<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span>xmax<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>xmax <span class="token operator">&gt;</span> t<span class="token punctuation">.</span>xid <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">isInSnapshot</span><span class="token punctuation">(</span>xmax<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vm的实现" tabindex="-1"><a class="header-anchor" href="#vm的实现" aria-hidden="true">#</a> VM的实现</h2><p>VM向上层提供的接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token keyword">int</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>事务的开启、提交、取消都是比较简单的，这里不再过多赘述</p><h3 id="read" tabindex="-1"><a class="header-anchor" href="#read" aria-hidden="true">#</a> read</h3><p>读取还是比较简单的，通过uid获取对应的entry，在entry中获取就是获取Dataitem同时该页面也会加入缓存 获取到对应entry后判断是否可见对当前事务，直接调用隔离级别中的方法即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Transaction</span> t <span class="token operator">=</span> activeTransaction<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>err <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> t<span class="token punctuation">.</span>err<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Entry</span> entry <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            entry <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token class-name">Error<span class="token punctuation">.</span>NullEntryException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Visibility</span><span class="token punctuation">.</span><span class="token function">isVisible</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> t<span class="token punctuation">,</span> entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> entry<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            entry<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> insert</h3><p>直接将数据包裹成entry然后传给DM进行保存即可，在DM保存时候也会记录Insert日志</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Transaction</span> t <span class="token operator">=</span> activeTransaction<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>err <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> t<span class="token punctuation">.</span>err<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> raw <span class="token operator">=</span> <span class="token class-name">Entry</span><span class="token punctuation">.</span><span class="token function">wrapEntryRaw</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> dm<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete</h3><p>delete比较复杂 首先获取该对象，然后判断是否可见 然后进行死锁检测 然后判断是否发生了死锁检测，如果是则将该事务设置为abort 如果没有则将MAX设置为当前事务</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Transaction</span> t <span class="token operator">=</span> activeTransaction<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>err <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> t<span class="token punctuation">.</span>err<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Entry</span> entry <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            entry <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token class-name">Error<span class="token punctuation">.</span>NullEntryException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Visibility</span><span class="token punctuation">.</span><span class="token function">isVisible</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> t<span class="token punctuation">,</span> entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Lock</span> l <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                l <span class="token operator">=</span> lt<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">.</span>err <span class="token operator">=</span> <span class="token class-name">Error<span class="token punctuation">.</span>ConcurrentUpdateException</span><span class="token punctuation">;</span>
                <span class="token function">internAbort</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                t<span class="token punctuation">.</span>autoAborted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> t<span class="token punctuation">.</span>err<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>l <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                l<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                l<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getXmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Visibility</span><span class="token punctuation">.</span><span class="token function">isVersionSkip</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> t<span class="token punctuation">,</span> entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">.</span>err <span class="token operator">=</span> <span class="token class-name">Error<span class="token punctuation">.</span>ConcurrentUpdateException</span><span class="token punctuation">;</span>
                <span class="token function">internAbort</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                t<span class="token punctuation">.</span>autoAborted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> t<span class="token punctuation">.</span>err<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            entry<span class="token punctuation">.</span><span class="token function">setXmax</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            entry<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","6.html.vue"]]);export{k as default};
