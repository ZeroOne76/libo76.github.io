const e=JSON.parse('{"key":"v-b1fa3fc4","path":"/my-world/personal-project/Java%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E6%98%93%E6%95%B0%E6%8D%AE%E5%BA%93/6.html","title":"VM的隔离级别以及实现VM","lang":"zh-CN","frontmatter":{"title":"VM的隔离级别以及实现VM","order":7,"date":"2022-12-09T00:00:00.000Z","category":["个人项目"],"tag":["Java","数据库"],"description":"事务的隔离级别这一章就是实现MVCC中比较重要的一节，Entry中保存了XMIN与XMAX，XMIN是在版本创建时填写的，而XMAX是在版本被删除或修改时候填写的 在读提交下，版本对事务的可见性逻辑如下 这里可以看高性能MySQL第三版，这里大致是基于这本书写的 事务隔离级别 读已提交 就是当一个事务提交了一个数据后，其它事务都可以读取到对应的数据 所以存在下面几种情况 xmin 未提交 a. xid == xmin &amp;&amp; xmax ==0 这代表这条记录就是当前事务创建的并且没有被当前事务删除 可以访问 b. 其它情况不能访问,因为xmin没有提交都不能访问 xmin 已经提交 a. xmax == 0 可以访问，因为这表示这个记录所对应的事务已经提交了并且没有被删除 b. xamx ！= 0(说明有事务在删除该数据) ⅰ. xid == xmax 说明是当前事务在删除该数据 不能访问 ⅱ. xid ！= xmax 说明不是当前事务在删除该数据 xmax 没有被提交 说明其它事务是正在删除或者取消了删除，那么可以访问 xmax 被提交 说明被删除了 不能访问","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/my-world/personal-project/Java%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E6%98%93%E6%95%B0%E6%8D%AE%E5%BA%93/6.html"}],["meta",{"property":"og:title","content":"VM的隔离级别以及实现VM"}],["meta",{"property":"og:description","content":"事务的隔离级别这一章就是实现MVCC中比较重要的一节，Entry中保存了XMIN与XMAX，XMIN是在版本创建时填写的，而XMAX是在版本被删除或修改时候填写的 在读提交下，版本对事务的可见性逻辑如下 这里可以看高性能MySQL第三版，这里大致是基于这本书写的 事务隔离级别 读已提交 就是当一个事务提交了一个数据后，其它事务都可以读取到对应的数据 所以存在下面几种情况 xmin 未提交 a. xid == xmin &amp;&amp; xmax ==0 这代表这条记录就是当前事务创建的并且没有被当前事务删除 可以访问 b. 其它情况不能访问,因为xmin没有提交都不能访问 xmin 已经提交 a. xmax == 0 可以访问，因为这表示这个记录所对应的事务已经提交了并且没有被删除 b. xamx ！= 0(说明有事务在删除该数据) ⅰ. xid == xmax 说明是当前事务在删除该数据 不能访问 ⅱ. xid ！= xmax 说明不是当前事务在删除该数据 xmax 没有被提交 说明其它事务是正在删除或者取消了删除，那么可以访问 xmax 被提交 说明被删除了 不能访问"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-30T15:44:42.000Z"}],["meta",{"property":"article:author","content":"CodeVmore"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2022-12-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-30T15:44:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VM的隔离级别以及实现VM\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-30T15:44:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CodeVmore\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"事务隔离级别","slug":"事务隔离级别","link":"#事务隔离级别","children":[{"level":3,"title":"读已提交","slug":"读已提交","link":"#读已提交","children":[]},{"level":3,"title":"可重复读","slug":"可重复读","link":"#可重复读","children":[]},{"level":3,"title":"版本跳跃问题","slug":"版本跳跃问题","link":"#版本跳跃问题","children":[]}]},{"level":2,"title":"VM的实现","slug":"vm的实现","link":"#vm的实现","children":[{"level":3,"title":"read","slug":"read","link":"#read","children":[]},{"level":3,"title":"insert","slug":"insert","link":"#insert","children":[]},{"level":3,"title":"delete","slug":"delete","link":"#delete","children":[]}]}],"git":{"createdTime":1682869482000,"updatedTime":1682869482000,"contributors":[{"name":"李博","email":"libo04@rd.netease.com","commits":1}]},"readingTime":{"minutes":4.64,"words":1392},"filePathRelative":"my-world/personal-project/Java实现的简易数据库/6.md","localizedDate":"2022年12月9日","excerpt":"<p>事务的隔离级别这一章就是实现MVCC中比较重要的一节，Entry中保存了XMIN与XMAX，XMIN是在版本创建时填写的，而XMAX是在版本被删除或修改时候填写的\\n在读提交下，版本对事务的可见性逻辑如下</p>\\n<blockquote>\\n<p>这里可以看高性能MySQL第三版，这里大致是基于这本书写的</p>\\n</blockquote>\\n<h2> 事务隔离级别</h2>\\n<h3> 读已提交</h3>\\n<p>就是当一个事务提交了一个数据后，其它事务都可以读取到对应的数据\\n所以存在下面几种情况</p>\\n<ol>\\n<li>xmin 未提交\\na. xid == xmin &amp;&amp; xmax ==0 这代表这条记录就是当前事务创建的并且没有被当前事务删除 可以访问\\nb. 其它情况不能访问,因为xmin没有提交都不能访问</li>\\n<li>xmin 已经提交\\na. xmax ==  0 可以访问，因为这表示这个记录所对应的事务已经提交了并且没有被删除\\nb. xamx ！= 0(说明有事务在删除该数据)\\nⅰ. xid == xmax 说明是当前事务在删除该数据 不能访问\\nⅱ. xid ！= xmax 说明不是当前事务在删除该数据\\n<ol>\\n<li>xmax 没有被提交   说明其它事务是正在删除或者取消了删除，那么可以访问</li>\\n<li>xmax 被提交 说明被删除了 不能访问</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
