import{_ as n,X as s,Y as a,a3 as t}from"./framework-4966486c.js";const p={},o=t(`<h2 id="tm简述" tabindex="-1"><a class="header-anchor" href="#tm简述" aria-hidden="true">#</a> TM简述</h2><p>TM是项目中最简单的一个模块，TM主要的功能为</p><blockquote><ol><li>管理事务状态<br></li><li>提供接口供其它模块使用</li></ol></blockquote><p>其中文件格式</p><figure><img src="https://cdn.jsdelivr.net/gh/CodeVmore/images/blog/20230429210800.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="xid文件" tabindex="-1"><a class="header-anchor" href="#xid文件" aria-hidden="true">#</a> XID文件</h2><h3 id="文件概述" tabindex="-1"><a class="header-anchor" href="#文件概述" aria-hidden="true">#</a> 文件概述</h3><p>每个事务都有一个XID，这个XID唯一标识了这个事务，事务的XID从1开始自增并且不能重复，如果一些操作在不需要事务的情况下进行，则可以设置XID为0，XID为0的事务的状态永远是committed XID文件头部占用8个字节，记录了这个XID文件管理的事务的个数，每个事务分配一个字节的空间用来保存其状态，所以事务XID在文件中的起始位置为(XID-1)+8字节处，XID为0的状态不需要记录</p><p>每一个事务都存在三种状态</p><blockquote><p>0 active 活跃的</p><p>1 committed 已提交的</p><p>2 aborted 撤销(回滚的)</p></blockquote><h2 id="tm提供接口" tabindex="-1"><a class="header-anchor" href="#tm提供接口" aria-hidden="true">#</a> TM提供接口</h2><h3 id="提供接口" tabindex="-1"><a class="header-anchor" href="#提供接口" aria-hidden="true">#</a> 提供接口</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 开启一个事务</span>

<span class="token keyword">void</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 提交一个事务</span>

<span class="token keyword">void</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//取消一个事务</span>

<span class="token keyword">boolean</span> <span class="token function">isActive</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 查询一个事务是否处于正在进行状态</span>

<span class="token keyword">boolean</span> <span class="token function">isCommitted</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 查询一个事务是否已经提交</span>

<span class="token keyword">boolean</span> <span class="token function">isAbort</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//查询一个事务是否已经取消</span>

<span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 关闭tm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事务的操作" tabindex="-1"><a class="header-anchor" href="#事务的操作" aria-hidden="true">#</a> 事务的操作</h3><p>事务的开启、提交、取消</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token comment">// 开启一个事务</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        counterLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> xid <span class="token operator">=</span> xidCounter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token function">updateXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_ACTIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">incrXIDCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> xid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            counterLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// 提交XID事务</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">updateXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_COMMITTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 回滚XID事务</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">updateXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_ABORTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	
	<span class="token comment">//修改状态</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateXID</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">byte</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token function">getXidPosition</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token constant">XID_FIELD_SIZE</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> status<span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fc<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Panic</span><span class="token punctuation">.</span><span class="token function">panic</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fc<span class="token punctuation">.</span><span class="token function">force</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Panic</span><span class="token punctuation">.</span><span class="token function">panic</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询事务状态" tabindex="-1"><a class="header-anchor" href="#查询事务状态" aria-hidden="true">#</a> 查询事务状态</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isActive</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xid <span class="token operator">==</span> <span class="token constant">SUPER_XID</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">checkXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_ACTIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCommitted</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xid <span class="token operator">==</span> <span class="token constant">SUPER_XID</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">checkXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_COMMITTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAborted</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xid <span class="token operator">==</span> <span class="token constant">SUPER_XID</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">checkXID</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token constant">FIELD_TRAN_ABORTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">checkXID</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">byte</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token function">getXidPosition</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token constant">XID_FIELD_SIZE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fc<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Panic</span><span class="token punctuation">.</span><span class="token function">panic</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> buf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> status<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TM就这么具体实现了，可能会有人认为这个项目其实也不是很难，但是这个TM是该项目中最最简单的所以实现的很快，TM基本上就是查询文件，修改文件来维护事务的状态的修改与查询</p>`,19),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","1.html.vue"]]);export{k as default};
