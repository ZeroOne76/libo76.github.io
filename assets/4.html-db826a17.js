import{_ as n,X as s,Y as a,a3 as p}from"./framework-4966486c.js";const t={},o=p(`<p>现在基本上DM中简单的都已经讲完了，接下来就需要讲解DM中的日志恢复与DM的具体实现</p><h2 id="dm日志恢复" tabindex="-1"><a class="header-anchor" href="#dm日志恢复" aria-hidden="true">#</a> DM日志恢复</h2><p>MuziDB的日志策略比较简单，就是在进行I和U之前,必须进行对应的日志操作，在保证日志写入磁盘后才进行的数据操作，这个日志策略使得MuziDB对于数据操作的磁盘同步变的更加随意，日志在数据操作之前，保证到达了磁盘，那么即使该数据操作最后没有来得及同步到磁盘，数据库就发生了崩溃，后续也可以通过磁盘上的日志恢复该记录</p><p>对于插入与修改日志操作的日志内容形式 (Ti,I,A,X) 表示事务Ti在A处插入了数据X (Ti,U,A,oldX,newX) 表示事务Ti在A处将oldX改为了newX</p><p>日志的恢复基于VM实现的两条规定</p><ol><li>正在进行的事务，不会读取其它任何未提交的事务产生的数据</li><li>正在进行的事务，不会修改其它任何未提交的事务修改或产生的数据</li></ol><p>所以日志的恢复就比较简单了</p><ul><li>重做所有崩溃时已完成(committed或aborted)的事务</li><li>撤销所有崩溃时未完成的事务</li></ul><h2 id="日志格式" tabindex="-1"><a class="header-anchor" href="#日志格式" aria-hidden="true">#</a> 日志格式</h2><p>日志在内存中与磁盘中格式还是存在一些区别，内存中的日志要为了人更加理解，磁盘中的日志是为了计算机理解</p><h3 id="内存中的日志" tabindex="-1"><a class="header-anchor" href="#内存中的日志" aria-hidden="true">#</a> 内存中的日志</h3><p>下面就是内存中两种日志格式的样子，为什么没有delete日志，后面我们会讲到</p><p><strong>InsertLogInfo</strong></p><p>xid 事务id<br> pgno 页号<br> offset 偏移量<br> raw 数据</p><p><strong>UpdateLogInfo</strong></p><p>oldraw 老数据<br> newraw 新数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InsertLogInfo</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> xid<span class="token punctuation">;</span>
        <span class="token keyword">int</span> pgno<span class="token punctuation">;</span>
        <span class="token keyword">short</span> offset<span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> raw<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UpdateLogInfo</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> xid<span class="token punctuation">;</span>
        <span class="token keyword">int</span> pgno<span class="token punctuation">;</span>
        <span class="token keyword">short</span> offset<span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldRaw<span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newRaw<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="磁盘中的日志格式" tabindex="-1"><a class="header-anchor" href="#磁盘中的日志格式" aria-hidden="true">#</a> 磁盘中的日志格式</h3><p><strong>InsertLog</strong></p><p>[LogType] [XID] [Pgno] [Offset] [Raw]<br> LogoType 占一个字节<br> XID 占八个字节<br> Pgno 占四个字节<br> Offset 占两个<br></p><p><strong>updateLog</strong></p><p>[LogType] [XID] [UID] [OldRaw] [NewRaw]<br> LogType 占一个字节<br> XID 占八个字节<br> UID 占八个字节</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">// [LogType] [XID] [UID] [OldRaw] [NewRaw]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_TYPE</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_XID</span> <span class="token operator">=</span> <span class="token constant">OF_TYPE</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_UPDATE_UID</span> <span class="token operator">=</span> <span class="token constant">OF_XID</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_UPDATE_RAW</span> <span class="token operator">=</span> <span class="token constant">OF_UPDATE_UID</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">;</span> 


    <span class="token comment">// [LogType] [XID] [Pgno] [Offset] [Raw]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_INSERT_PGNO</span> <span class="token operator">=</span> <span class="token constant">OF_XID</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_INSERT_OFFSET</span> <span class="token operator">=</span> <span class="token constant">OF_INSERT_PGNO</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">OF_INSERT_RAW</span> <span class="token operator">=</span> <span class="token constant">OF_INSERT_OFFSET</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span>

	<span class="token comment">//封装成updateLog</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">updateLog</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token class-name">DataItem</span> di<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> logType <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">LOG_TYPE_UPDATE</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> xidRaw <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">.</span><span class="token function">long2Byte</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> uidRaw <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">.</span><span class="token function">long2Byte</span><span class="token punctuation">(</span>di<span class="token punctuation">.</span><span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldRaw <span class="token operator">=</span> di<span class="token punctuation">.</span><span class="token function">getOldRaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SubArray</span> raw <span class="token operator">=</span> di<span class="token punctuation">.</span><span class="token function">getRaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newRaw <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>raw<span class="token punctuation">.</span>raw<span class="token punctuation">,</span> raw<span class="token punctuation">.</span>start<span class="token punctuation">,</span> raw<span class="token punctuation">.</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>logType<span class="token punctuation">,</span> xidRaw<span class="token punctuation">,</span> uidRaw<span class="token punctuation">,</span> oldRaw<span class="token punctuation">,</span> newRaw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token comment">//封装成insertLog</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">insertLog</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token class-name">Page</span> pg<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> raw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> logTypeRaw <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">LOG_TYPE_INSERT</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> xidRaw <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">.</span><span class="token function">long2Byte</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pgnoRaw <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">.</span><span class="token function">int2Byte</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span><span class="token function">getPageNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> offsetRaw <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">.</span><span class="token function">short2Byte</span><span class="token punctuation">(</span><span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">getFSO</span><span class="token punctuation">(</span>pg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>logTypeRaw<span class="token punctuation">,</span> xidRaw<span class="token punctuation">,</span> pgnoRaw<span class="token punctuation">,</span> offsetRaw<span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断日志类型" tabindex="-1"><a class="header-anchor" href="#判断日志类型" aria-hidden="true">#</a> 判断日志类型</h3><p>可以看到在这个类里面读取日志使用的next方法 只需判断第一个字节是0还是1，如果是0那么就是Insert日志否则就是Update日志，如果是Insert的重做就很简单，直接将其插入到页面的具体位置即可，如果是Update日志的重做，则需要将新数据插入到指定位置即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isInsertLog</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> log<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token constant">LOG_TYPE_INSERT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重做已经完成的事务" tabindex="-1"><a class="header-anchor" href="#重做已经完成的事务" aria-hidden="true">#</a> 重做已经完成的事务</h3><p>这个重做已经完成的事务还是比较简单的，只要事务不是活跃的都进行重做即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">redoTranscations</span><span class="token punctuation">(</span><span class="token class-name">TransactionManager</span> tm<span class="token punctuation">,</span> <span class="token class-name">Logger</span> lg<span class="token punctuation">,</span> <span class="token class-name">PageCache</span> pc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lg<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log <span class="token operator">=</span> lg<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>log <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">InsertLogInfo</span> li <span class="token operator">=</span> <span class="token function">parseInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> xid <span class="token operator">=</span> li<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>tm<span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">doInsertLog</span><span class="token punctuation">(</span>pc<span class="token punctuation">,</span> log<span class="token punctuation">,</span> <span class="token constant">REDO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">UpdateLogInfo</span> xi <span class="token operator">=</span> <span class="token function">parseUpdateLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> xid <span class="token operator">=</span> xi<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>tm<span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">doUpdateLog</span><span class="token punctuation">(</span>pc<span class="token punctuation">,</span> log<span class="token punctuation">,</span> <span class="token constant">REDO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doInsertLog</span><span class="token punctuation">(</span><span class="token class-name">PageCache</span> pc<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">InsertLogInfo</span> li <span class="token operator">=</span> <span class="token function">parseInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Page</span> pg <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            pg <span class="token operator">=</span> pc<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>li<span class="token punctuation">.</span>pgno<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Panic</span><span class="token punctuation">.</span><span class="token function">panic</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token constant">UNDO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">DataItem</span><span class="token punctuation">.</span><span class="token function">setDataItemRawInvalid</span><span class="token punctuation">(</span>li<span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">recoverInsert</span><span class="token punctuation">(</span>pg<span class="token punctuation">,</span> li<span class="token punctuation">.</span>raw<span class="token punctuation">,</span> li<span class="token punctuation">.</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            pg<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doUpdateLog</span><span class="token punctuation">(</span><span class="token class-name">PageCache</span> pc<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> pgno<span class="token punctuation">;</span>
        <span class="token keyword">short</span> offset<span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> raw<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token constant">REDO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">UpdateLogInfo</span> xi <span class="token operator">=</span> <span class="token function">parseUpdateLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pgno <span class="token operator">=</span> xi<span class="token punctuation">.</span>pgno<span class="token punctuation">;</span>
            offset <span class="token operator">=</span> xi<span class="token punctuation">.</span>offset<span class="token punctuation">;</span>
            raw <span class="token operator">=</span> xi<span class="token punctuation">.</span>newRaw<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">UpdateLogInfo</span> xi <span class="token operator">=</span> <span class="token function">parseUpdateLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pgno <span class="token operator">=</span> xi<span class="token punctuation">.</span>pgno<span class="token punctuation">;</span>
            offset <span class="token operator">=</span> xi<span class="token punctuation">.</span>offset<span class="token punctuation">;</span>
            raw <span class="token operator">=</span> xi<span class="token punctuation">.</span>oldRaw<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Page</span> pg <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            pg <span class="token operator">=</span> pc<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pgno<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Panic</span><span class="token punctuation">.</span><span class="token function">panic</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">recoverUpdate</span><span class="token punctuation">(</span>pg<span class="token punctuation">,</span> raw<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            pg<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="撤销未完成的事务" tabindex="-1"><a class="header-anchor" href="#撤销未完成的事务" aria-hidden="true">#</a> 撤销未完成的事务</h3><p>重做是比较简单的，只需要重新继续执行就行，而撤销稍微困难一点，需要重后往前即可，对于Insert日志的撤销是很简单的只需要将其DataItem标志位设置为非法即可，这就需要去看前面的DataItem的结构，对于Update日志的撤销需要将DataItem中的值改为旧值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">undoTranscations</span><span class="token punctuation">(</span><span class="token class-name">TransactionManager</span> tm<span class="token punctuation">,</span> <span class="token class-name">Logger</span> lg<span class="token punctuation">,</span> <span class="token class-name">PageCache</span> pc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> logCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lg<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log <span class="token operator">=</span> lg<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>log <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">InsertLogInfo</span> li <span class="token operator">=</span> <span class="token function">parseInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> xid <span class="token operator">=</span> li<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>tm<span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>logCache<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        logCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    logCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">UpdateLogInfo</span> xi <span class="token operator">=</span> <span class="token function">parseUpdateLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> xid <span class="token operator">=</span> xi<span class="token punctuation">.</span>xid<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>tm<span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>logCache<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        logCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    logCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>xid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 对所有active log进行倒序undo</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token operator">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> entry <span class="token operator">:</span> logCache<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> logs <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> logs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log <span class="token operator">=</span> logs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isInsertLog</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">doInsertLog</span><span class="token punctuation">(</span>pc<span class="token punctuation">,</span> log<span class="token punctuation">,</span> <span class="token constant">UNDO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">doUpdateLog</span><span class="token punctuation">(</span>pc<span class="token punctuation">,</span> log<span class="token punctuation">,</span> <span class="token constant">UNDO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            tm<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dm的实现" tabindex="-1"><a class="header-anchor" href="#dm的实现" aria-hidden="true">#</a> DM的实现</h2><p>讲了DM中日志的恢复现在来讲DM的实现</p><p>DM向上只提供了Insert与Read的方法，原因在后面会讲到</p><h3 id="read" tabindex="-1"><a class="header-anchor" href="#read" aria-hidden="true">#</a> read</h3><p>read是根据UID从缓存中获取DataItem，这也是缓存抽象类中的get方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">DataItem</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">DataItemImpl</span> di <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">DataItemImpl</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>di<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            di<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> di<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> Insert</h3><p>向上层提供的插入方法</p><ol><li>首先将上层的数据包装成DataItem类型</li><li>然后从页面索引中选取一个页面信息来决定是是那个页面</li><li>通过页号获取对应页面</li><li>然后写insert日志</li><li>日志写完再把数据写进页面</li><li>然后返回UID</li><li>然后把取出的页面信息重新刷回页面索引</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">long</span> xid<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> raw <span class="token operator">=</span> <span class="token class-name">DataItem</span><span class="token punctuation">.</span><span class="token function">wrapDataItemRaw</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>raw<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token constant">MAX_FREE_SPACE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token class-name">Error<span class="token punctuation">.</span>DataTooLargeException</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">PageInfo</span> pi <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pi <span class="token operator">=</span> pIndex<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>raw<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pi <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> newPgno <span class="token operator">=</span> pc<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">initRaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                pIndex<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newPgno<span class="token punctuation">,</span> <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token constant">MAX_FREE_SPACE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pi <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token class-name">Error<span class="token punctuation">.</span>DatabaseBusyException</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Page</span> pg <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> freeSpace <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            pg <span class="token operator">=</span> pc<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>pgno<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> log <span class="token operator">=</span> <span class="token class-name">Recover</span><span class="token punctuation">.</span><span class="token function">insertLog</span><span class="token punctuation">(</span>xid<span class="token punctuation">,</span> pg<span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">short</span> offset <span class="token operator">=</span> <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>pg<span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>

            pg<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Types</span><span class="token punctuation">.</span><span class="token function">addressToUid</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>pgno<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// 将取出的pg重新插入pIndex</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>pg <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                pIndex<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>pgno<span class="token punctuation">,</span> <span class="token class-name">PageX</span><span class="token punctuation">.</span><span class="token function">getFreeSpace</span><span class="token punctuation">(</span>pg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                pIndex<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>pgno<span class="token punctuation">,</span> freeSpace<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","4.html.vue"]]);export{k as default};
